tail(CPS1988)
tail(CPS1988,10)
#p73
myVec <- 1:10
myMat <- matrix(1:12, ncol = 3)
myDf <- CPS1988[1:10,]
myList <- list(myVec, myMat, myDf)
namedList <- list(A=myVec, B=myMat, C=myDf)
namedList
namedList$D <- pi
namedList['E'] <- exp(1)
#p74
namedList[4]
namedList['D']
#p75
length(namedList)
namedList$D <- NULL
length(namedList)
#p79
num = 5
if (num %% 2 != 0) {
cat(num, 'is odd')
}
#p80
num <- 4
if (num %% 2 != 0) {
cat(num, 'is odd')
} else {
cat(num, 'is even')
}
# not working
num <- 4
if (num %% 2 != 0) {
cat(num, 'is odd') }
else {
cat(num, 'is even')
}
#p81
if (num %% 2 != 0) {
cat(num, 'is odd')
} else if (num == 0) {
cat(num, 'is even, although many people do not realize it.')
} else {
cat(num, 'is even')
}
#p82
num <- 1:6
ifelse(num %% 2 == 0, yes='even', no='odd')
set.seed(0)
sample(0:100, 20, replace=TRUE)
set.seed(0)
age <- sample(0:100, 20, replace=TRUE)
res <- ifelse(age > 70, 'old', ifelse(age <= 30, 'young', 'mid'))
res
#p83
SDcalc <- function(x, type = 'sample') {
x <- x[!is.na(x)]
n <- length(x)
mu <- mean(x)
if (type == 'sample') {
stdev <- sqrt(sum((x-mu)^2)/(n-1))
}
if (type == 'population') {
stdev <- sqrt(sum((x-mu)^2)/(n))
}
return(stdev)
}
SDcalc(1:21)
SDcalc(1:21,type="population")
#p84
sign_data<-read.csv("datafolder/TimesSquareSignage.csv",header=T)
obs <- nrow(sign_data)
for (i in 1:obs) {
if (is.na(sign_data$Width[i])) {
cat('WARNING: Missing width for sign no.', i, '\n')
}
}
#p86
i = 1
while (i <= obs) {
if (is.na(sign_data$Width[i])) {
cat('WARNING: Missing width for sign no.', i, '\n')
}
i = i + 1
}
for (i in 20:184) {
if (is.na(sign_data$Width[i])) {
cat('WARNING: Missing width for sign no.', i, '\n')
}
}
i = 20
while (i <= obs) {
if (is.na(sign_data$Width[i])) {
cat('WARNING: Missing width for sign no.', i, '\n')
}
i = i + 1
}
#p88
j = 1
nas = which(is.na(sign_data$Width))
while (j < 6) {
cat('WARNING: Missing width for sign no.', nas[j], '\n')
j = j + 1
if (j > 5) {
cat('WARNING: Turned up more than 5 missing values')
}
}
#p92
findprime <- function(x) {
if (x %in% c(2, 3, 5, 7)) return(TRUE)
if (x %% 2 == 0 | x == 1) return(FALSE)
xsqrt <- round(sqrt(x))
xseq <- seq(from = 3, to = xsqrt, by = 2)
if (all(x %% xseq != 0)) return(TRUE)
else return(FALSE)
}
#p93
system.time({
x1 <- c()
for (i in 1:1e4) {
x1[i] <- findprime(i)
}
})
#p94
system.time({
x2 = logical(1e4)
for (i in 1:1e4) {
x2[i] = findprime(i)
}
})
#p95
system.time({
sapply(1:1e4, findprime)
})
#p96
i = 2
x = 1:2
while (x[i] < 1e3) {
x[i+1] <- x[i-1] + x[i]
i <- i + 1
}
x = x[-i]
x
#p8
df <- data.frame(
color = c("blue", "black", "blue", "blue", "black"),
value = 1:5
)
color = c("blue", "black", "blue", "blue", "black")
value = 1:5
cb <- cbind(color,value)
class(df[,2]) # integer
class(cb[,2]) # character string which is incorrect
value2 <-6:10
cb2 <- cbind(value,value2)
class(cb2[,2]) #integer
#p9
library(readr)
bnames_df <-read_csv("datafolder/bnames.csv.bz2")
births_df <-read_csv("datafolder/births.csv")
bnames_df2 <- read.csv("datafolder/bnames.csv.bz2")
birth_df2 <- read.csv("datafolder/births.csv")
#p10
head(bnames_df)
tail(bnames_df)
#P11
library(dplyr)
tbl <- tbl_df(df)
bnames <- tbl_df(bnames_df)
births <- tbl_df(births_df)
class(bnames[,1])
class(bnames_df2[,1])
#poll q1
class(bnames[,1:2])
class(bnames_df[,1:2])
#p17
filter(tbl,color=="blue")
#base R
tbl[tbl$color=="blue",]
#p18
filter(df,value %in% c(1,4))
filter(df,value==1|value==4)
#base R
df[df$value %in% c(1,4),]
df[df$value==1|value==4,]
#p20
vivian = filter(bnames,name=="Vivian")
vivian$soundex[1]
vivian$soundex
unique(vivian$soundex)
#p21
filter(bnames, sex == "girl", year == 1900 | year == 2000)
filter(bnames, sex == "girl", year %in% c(1900,2000))
filter(bnames_df, sex == "girl", year %in% c(1900,2000))
filter(bnames_df2, sex == "girl", year %in% c(1900,2000))
filter(bnames,sex=="girl" & year ==1900 | year == 2000)
#p22
filter(bnames,year>2000,prop>0.01)
#poll
filter(bnames,year==2005,prop>0.01,sex=="boy")
#p25
select(tbl,color)
select(tbl,-color)
#p29
select(bnames, soundex)
select(bnames, starts_with("sound"))
select(bnames, ends_with("ex"))
select(bnames,one_of("sex","prop"))
#P30
select(bnames, firstnames = name)
#p33
# dplyr without piping
head(select(filter(bnames,year==1900),one_of("name","sex")),100)
# dplyr with piping
bnames %>%
filter(year == 1900) %>%
select(name, sex) %>%
head(100)
# poll 3
bnames %>%
filter(year==2000,prop>0.01) %>%
select(name) # correct
bnames %>%
select(name) %>%
filter(year==2000,prop>0.01) # incorrect
bnames %>%
filter(name == "John") %>%
select(name)
bnames %>%
select(name) %>%
filter(name == "John")
bnames %>%
select(name,year,prop) %>%
filter(year==2000,prop>0.01) # correct
#p35
df1 <- data.frame(color = c(4,1,5,3,2),
value = 1:5)
df1 %>%
arrange(color)
#p36
df_order <- order(df1$color) #Returns the indices for ascending order.
df1[df_order,]
df1[order(df1$color),]
#p37
arrange(df1,desc(color))
df1 %>%
arrange(desc(color))
#p38
bnames %>%
arrange(desc(prop))
#p39
bnames %>%
filter(name == "Vivian") %>%
arrange(desc(prop))
#p43
tbl %>% mutate(double = 2*value)
tbl %>% mutate(double <- 2*value)
tbl %>% mutate(double = 2*value,quadruple = 4*value)
#p45
tbl %>% transmute(double = 2*value,quadruple = 4*value)
#p48
tbl %>% summarize(total =sum(value))
class(tbl %>% summarize(total =sum(value)))
pull(tbl %>% summarize(total =sum(value)))
class(pull(tbl %>% summarize(total =sum(value))))
#p49
tbl %>% summarise(total = sum(value), avg = mean(value))
#p52
vivian %>%
mutate(perc =prop *100) %>%
summarize(minimum = min(prop),
avg = mean(prop),
maximum=max(prop))
v1 <- vivian %>%
mutate(perc =prop *100) %>%
summarize(minimum = min(prop),
avg = mean(prop),
maximum=max(prop))
# poll 3
pull(v1)
pull(v1,1)
pull(v1,2)
pull(v1,3)
#p61
x <- data.frame(
name = c("John", "Paul", "George", "Ringo", "Stuart", "Pete"),
instrument = c("guitar", "bass", "guitar", "drums", "bass",
"drums"))
y <- data.frame(
name = c("John", "Paul", "George", "Ringo", "Brian"),
band = c("TRUE", "TRUE", "TRUE", "TRUE", "FALSE"))
#p63
x %>% left_join(y, by = "name")
#p64
x %>% inner_join(y, by = "name")
x %>% left_join(y, by = "name") %>% filter( !is.na(band))
#p65
x %>% semi_join(y, by = "name")
#p66
x %>% anti_join(y, by = "name")
#p68
bnames %>%
left_join(births, by=c("year","sex"))
bnames %>%
left_join(births, by="year")
#p69
bnames %>%
left_join(births, by = c("year","sex")) %>%
mutate(n = round(prop * births)) -> bnames2
bnames %>%
left_join(births, by = c("year","sex")) %>%
mutate(n = (prop * births)) -> bnames3
bnames3 %>%
mutate( n = replace(n,values = round(prop*births))) ->bnames3
#P73
bnames2 %>%
filter(name == "Vivian") %>%
summarize(total = sum(n))
#p76
tbl %>% summarise(total = sum(value))
#p77
tbl %>%
group_by(color) %>%
summarise(total = sum(value))
#p78
bnames2
bnames2 %>%
group_by(name)
#p79
bnames2 %>%
group_by(name) %>%
summarize(total = sum(n)) -> totals
#p80
bnames2 %>%
group_by(name, sex)
bnames2 %>%
group_by(name) %>%
group_by(sex)
#p83
bnames %>%
group_by(name, sex) -> bnames_grpd
bnames_grpd
bnames_grpd %>%
ungroup()
#poll 6
bnames2 %>%
group_by(name,sex) %>%
summarize(total = sum(n)) %>%
arrange(desc(total))
#P87
bnames2 %>%
group_by(soundex) %>%
summarise(total = sum(n))
bnames2 %>%
group_by(soundex) %>%
summarise(total = sum(n)) %>%
arrange(desc(total))
#p89
bnames2 %>%
filter(soundex == "J500") %>%
select(name) %>%
distinct()
bnames2 %>%
filter(soundex == "J500") %>%
select(name) %>%
unique()
#p90
bnames2 %>%
group_by(soundex) %>%
summarise(total = sum(n)) %>%
arrange(desc(total)) %>%
filter(row_number() == 1) %>%
select(soundex) %>%
left_join(bnames2) %>%
select(name) %>%
distinct()
#p95
bnames2 %>%
group_by(year, sex) %>%
summarise(births = sum(n))
#p97
bnames2 %>%
group_by(year, sex) %>%
mutate(ranking = rank(desc(n)))
bnames2 %>%
group_by(year,sex,name) %>%
summarize(total = sum(n)) %>%
mutate(ranking = rank(desc(total))) %>%
arrange(year,sex,ranking)
#p99
bnames2 %>%
group_by(year, sex) %>%
mutate(ranking = rank(desc(n))) %>%
filter(ranking == 1) %>%
select(name) %>%
distinct()
#p99
bnames2 %>%
group_by(year, sex) %>%
mutate(ranking = rank(desc(n))) %>%
filter(ranking == 1) %>%
ungroup() %>%
select(name) %>%
distinct()
#p101
bnames2 %>%
group_by(year, sex) %>%
mutate(ranking = rank(desc(n))) %>%
filter(ranking == 1) %>%
group_by(name) %>%
summarise(count = n()) %>%
arrange(desc(count))
bnames2 %>%
group_by(year, sex) %>%
mutate(ranking = rank(desc(n))) %>%
filter(ranking == 1) %>%
group_by(name) %>%
summarise(count = sum(ranking) ) %>%
arrange(desc(count))
#105
bnames2 %>%
select(-soundex) %>%
group_by(name,sex)
#p106
bnames2 %>%
select(-soundex) %>%
group_by(name,sex) %>%
summarize(total = sum(n))
#p107
bnames2 %>%
select(-soundex) %>%
group_by(name,sex) %>%
summarize(total = sum(n)) %>%
summarise(total2 = sum(total))
bnames2 %>%
select(-soundex) %>%
group_by(name,sex) %>%
summarize(total = sum(n)) %>%
summarise(total2 = sum(total)) %>%
summarise(total3 =sum(total2))
#ordering of the group_by matters
#compare with p107
bnames2 %>%
select(-soundex) %>%
group_by(sex,name) %>%
summarize(total = sum(n)) %>%
summarise(total2 = sum(total))
?c
v2 <- 10:1
v1=c{1880,1881,1882}
v1=c(1880,1881,1882)
v1=c(1880,1881,1882)
v2=c(boy,boy,boy)
v2=c(boy,boy,boy)
v2=c('boy','boy','boy')
v3=c(118405,108290)
year=c(1880,1881,1882)
sex=c('boy','boy','boy')
births=c(118405,108290)
birthsdf=data.frame(year,sex,births)
year=c(1880,1881,1882)
sex=c('boy','boy','boy')
births=c(118405,108290,122034)
birthsdf=data.frame(year,sex,births)
girls_90= c(filter(birthsdf, [sex='girl',year>=1990 and year<=2000]))
girls_90 = select(birthsdf, [sex='girl', year>=1990 & year<=2000]))
girls_90 = select(birthsdf, sex='girl' &  year>=1990 & year<=2000)
girls_90 = select(birthsdf, sex=='girl' &  year>=1990 & year<=2000)
girls_90 = select(birthsdf, sex is 'girl' &  year>=1990 & year<=2000)
girls_90 = select(birthsdf, sex = 'girl' &  year>=1990 & year<=2000)
girls_90 = filter(birthsdf, sex = 'girl' & year>=1990 & year<=2000)
girls_90 = filter(birthsdf, sex == 'girl' & year>=1990 & year<=2000)
girls_90
x <- rnorm(1000,2)
?rnorm
rnorm(100)
y = sample(x,100)
avg(x)
avg[x]
ave(x)
average(x)
mean(x)
mean(x)-mean(y)
i = 2
x = 1:2
fib_sum = 0
while (x[i] < 4e6){
if (x[i] %% 2 == 0){
fib_sum = fib_sum + x[i]
}
x[i+1] = x[i] + x[i-1]
i = i + 1
}
fib_sum
# memory-friendly solution
a = 1
b = 2
fib_sum = 0
while (b <4e6){
if (b %% 2 == 0){
fib_sum = fib_sum + b
}
temp = b
b = a + b
a = temp
}
fib_sum
setwd("C:/Users/adria/NYCDSA/Bootcamp/Project1/Honolulu311")
shiny::runApp('C:/Users/adria/NYCDSA/Bootcamp/Project1/Test')
setwd("C:/Users/adria/NYCDSA/Bootcamp/Project1/Honolulu311")
runApp()
setwd("C:/Users/adria/NYCDSA/Bootcamp/Project1/Honolulu311")
